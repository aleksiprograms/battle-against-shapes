package com.aleksiprograms.battleagainstshapes.resources;

import com.aleksiprograms.battleagainstshapes.TheGame;
import com.badlogic.gdx.physics.box2d.BodyDef;
import com.badlogic.gdx.physics.box2d.FixtureDef;
import com.aleksiprograms.battleagainstshapes.toolbox.PhysicalDef;
import com.badlogic.gdx.utils.Array;

/**
 * Holds all physical definitions of the game objects for example linear damping, density and friction.
 */
public class PhysicalDefinitions {

    public TheGame game;
    public PhysicalDef pdFighter;
    public PhysicalDef pdWall;
    public PhysicalDef pdBlade;
    public PhysicalDef pdDynamite;
    public PhysicalDef pdBullet;
    public PhysicalDef pdGrenade;
    public PhysicalDef pdKnife;
    public PhysicalDef pdRocket;
    public PhysicalDef pdShot;
    public PhysicalDef pdFlamethrowerParticle;
    public PhysicalDef pdExplosionParticle;
    public PhysicalDef pdFighterExplosionParticle;
    public PhysicalDef pdFighterFlameParticle;
    public PhysicalDef pdEnemyCircle;
    public PhysicalDef pdEnemyEllipse;
    public PhysicalDef pdEnemyPentagon;
    public PhysicalDef pdEnemyRectangle;
    public PhysicalDef pdEnemySemicircle;
    public PhysicalDef pdEnemySquare;
    public PhysicalDef pdEnemyStar;
    public PhysicalDef pdEnemyTriangle;
    public PhysicalDef pdEnemyCircleAmmunition;
    public PhysicalDef pdEnemyPentagonAmmunition;
    public PhysicalDef pdEnemyRectangleAmmunition;
    public PhysicalDef pdEnemySemicircleAmmunition;
    public PhysicalDef pdEnemyStarAmmunition;
    public PhysicalDef pdEnemyTriangleAmmunition;

    public PhysicalDefinitions(TheGame game) {
        this.game = game;
        Array<BodyDef> bodyDefs = new Array<BodyDef>();
        Array<FixtureDef> fixtureDefs = new Array<FixtureDef>();
        
        bodyDefs.add(new BodyDef());
        fixtureDefs.add(new FixtureDef());
        bodyDefs.peek().type = BodyDef.BodyType.DynamicBody;
        bodyDefs.peek().position.set(0, 0);
        bodyDefs.peek().linearDamping = 3.5f;
        bodyDefs.peek().angularDamping = 2.5f;
        bodyDefs.peek().fixedRotation = true;
        bodyDefs.peek().gravityScale = 0;
        fixtureDefs.peek().shape = game.shapes.fighterShape;
        fixtureDefs.peek().filter.categoryBits = Constants.CATEGORY_PLAYER;
        fixtureDefs.peek().filter.maskBits = Constants.MASK_PLAYER;
        fixtureDefs.peek().density = 1.5f;
        fixtureDefs.peek().friction = 0.1f;
        fixtureDefs.peek().restitution = 0;
        fixtureDefs.peek().isSensor = false;
        pdFighter = new PhysicalDef(bodyDefs.peek(), fixtureDefs.peek());

        bodyDefs.add(new BodyDef());
        fixtureDefs.add(new FixtureDef());
        bodyDefs.peek().type = BodyDef.BodyType.StaticBody;
        bodyDefs.peek().position.set(0, 0);
        bodyDefs.peek().linearDamping = 0;
        bodyDefs.peek().angularDamping = 0;
        bodyDefs.peek().fixedRotation = true;
        bodyDefs.peek().gravityScale = 0;
        fixtureDefs.peek().shape = game.shapes.wallShape;
        fixtureDefs.peek().filter.categoryBits = Constants.CATEGORY_LEVEL_WALL;
        fixtureDefs.peek().filter.maskBits = Constants.MASK_LEVEL_WALL;
        fixtureDefs.peek().density = 0;
        fixtureDefs.peek().friction = 0;
        fixtureDefs.peek().restitution = 0;
        fixtureDefs.peek().isSensor = false;
        pdWall = new PhysicalDef(bodyDefs.peek(), fixtureDefs.peek());

        bodyDefs.add(new BodyDef());
        fixtureDefs.add(new FixtureDef());
        bodyDefs.peek().type = BodyDef.BodyType.DynamicBody;
        bodyDefs.peek().position.set(0, 0);
        bodyDefs.peek().linearDamping = 0;
        bodyDefs.peek().angularDamping = 0;
        bodyDefs.peek().fixedRotation = false;
        bodyDefs.peek().gravityScale = 0;
        fixtureDefs.peek().shape = game.shapes.bladeShape;
        fixtureDefs.peek().filter.categoryBits = Constants.CATEGORY_PLAYER_AMMUNITION;
        fixtureDefs.peek().filter.maskBits = Constants.MASK_PLAYER_AMMUNITION;
        fixtureDefs.peek().density = 30;
        fixtureDefs.peek().friction = 0;
        fixtureDefs.peek().restitution = 0;
        fixtureDefs.peek().isSensor = true;
        pdBlade = new PhysicalDef(bodyDefs.peek(), fixtureDefs.peek());

        bodyDefs.add(new BodyDef());
        fixtureDefs.add(new FixtureDef());
        bodyDefs.peek().type = BodyDef.BodyType.DynamicBody;
        bodyDefs.peek().position.set(0, 0);
        bodyDefs.peek().linearDamping = 0;
        bodyDefs.peek().angularDamping = 0;
        bodyDefs.peek().fixedRotation = false;
        bodyDefs.peek().gravityScale = 1;
        fixtureDefs.peek().shape = game.shapes.dynamiteShape;
        fixtureDefs.peek().filter.categoryBits = Constants.CATEGORY_PLAYER_AMMUNITION;
        fixtureDefs.peek().filter.maskBits = Constants.MASK_PLAYER_AMMUNITION;
        fixtureDefs.peek().density = 3;
        fixtureDefs.peek().friction = 0;
        fixtureDefs.peek().restitution = 0;
        fixtureDefs.peek().isSensor = false;
        pdDynamite = new PhysicalDef(bodyDefs.peek(), fixtureDefs.peek());

        bodyDefs.add(new BodyDef());
        fixtureDefs.add(new FixtureDef());
        bodyDefs.peek().type = BodyDef.BodyType.DynamicBody;
        bodyDefs.peek().position.set(0, 0);
        bodyDefs.peek().linearDamping = 0;
        bodyDefs.peek().angularDamping = 0;
        bodyDefs.peek().fixedRotation = true;
        bodyDefs.peek().gravityScale = 0;
        fixtureDefs.peek().shape = game.shapes.bulletShape;
        fixtureDefs.peek().filter.categoryBits = Constants.CATEGORY_PLAYER_AMMUNITION;
        fixtureDefs.peek().filter.maskBits = Constants.MASK_PLAYER_AMMUNITION;
        fixtureDefs.peek().density = 3;
        fixtureDefs.peek().friction = 0;
        fixtureDefs.peek().restitution = 0;
        fixtureDefs.peek().isSensor = false;
        pdBullet = new PhysicalDef(bodyDefs.peek(), fixtureDefs.peek());

        bodyDefs.add(new BodyDef());
        fixtureDefs.add(new FixtureDef());
        bodyDefs.peek().type = BodyDef.BodyType.DynamicBody;
        bodyDefs.peek().position.set(0, 0);
        bodyDefs.peek().linearDamping = 0;
        bodyDefs.peek().angularDamping = 0;
        bodyDefs.peek().fixedRotation = true;
        bodyDefs.peek().gravityScale = 0;
        fixtureDefs.peek().shape = game.shapes.grenadeShape;
        fixtureDefs.peek().filter.categoryBits = Constants.CATEGORY_PLAYER_AMMUNITION;
        fixtureDefs.peek().filter.maskBits = Constants.MASK_PLAYER_AMMUNITION;
        fixtureDefs.peek().density = 3;
        fixtureDefs.peek().friction = 0;
        fixtureDefs.peek().restitution = 0;
        fixtureDefs.peek().isSensor = false;
        pdGrenade = new PhysicalDef(bodyDefs.peek(), fixtureDefs.peek());

        bodyDefs.add(new BodyDef());
        fixtureDefs.add(new FixtureDef());
        bodyDefs.peek().type = BodyDef.BodyType.DynamicBody;
        bodyDefs.peek().position.set(0, 0);
        bodyDefs.peek().linearDamping = 0;
        bodyDefs.peek().angularDamping = 0.5f;
        bodyDefs.peek().fixedRotation = false;
        bodyDefs.peek().gravityScale = 0;
        fixtureDefs.peek().shape = game.shapes.knifeShape;
        fixtureDefs.peek().filter.categoryBits = Constants.CATEGORY_PLAYER_AMMUNITION;
        fixtureDefs.peek().filter.maskBits = Constants.MASK_PLAYER_AMMUNITION;
        fixtureDefs.peek().density = 1;
        fixtureDefs.peek().friction = 0;
        fixtureDefs.peek().restitution = 0;
        fixtureDefs.peek().isSensor = true;
        pdKnife = new PhysicalDef(bodyDefs.peek(), fixtureDefs.peek());

        bodyDefs.add(new BodyDef());
        fixtureDefs.add(new FixtureDef());
        bodyDefs.peek().type = BodyDef.BodyType.DynamicBody;
        bodyDefs.peek().position.set(0, 0);
        bodyDefs.peek().linearDamping = 0;
        bodyDefs.peek().angularDamping = 0;
        bodyDefs.peek().fixedRotation = true;
        bodyDefs.peek().gravityScale = 0;
        fixtureDefs.peek().shape = game.shapes.rocketShape;
        fixtureDefs.peek().filter.categoryBits = Constants.CATEGORY_PLAYER_AMMUNITION;
        fixtureDefs.peek().filter.maskBits = Constants.MASK_PLAYER_AMMUNITION;
        fixtureDefs.peek().density = 3;
        fixtureDefs.peek().friction = 0;
        fixtureDefs.peek().restitution = 0;
        fixtureDefs.peek().isSensor = false;
        pdRocket = new PhysicalDef(bodyDefs.peek(), fixtureDefs.peek());

        bodyDefs.add(new BodyDef());
        fixtureDefs.add(new FixtureDef());
        bodyDefs.peek().type = BodyDef.BodyType.DynamicBody;
        bodyDefs.peek().position.set(0, 0);
        bodyDefs.peek().linearDamping = 0;
        bodyDefs.peek().angularDamping = 0;
        bodyDefs.peek().fixedRotation = true;
        bodyDefs.peek().gravityScale = 0;
        fixtureDefs.peek().shape = game.shapes.shotShape;
        fixtureDefs.peek().filter.categoryBits = Constants.CATEGORY_PLAYER_AMMUNITION;
        fixtureDefs.peek().filter.maskBits = Constants.MASK_PLAYER_AMMUNITION;
        fixtureDefs.peek().density = 3;
        fixtureDefs.peek().friction = 0;
        fixtureDefs.peek().restitution = 0;
        fixtureDefs.peek().isSensor = false;
        pdShot = new PhysicalDef(bodyDefs.peek(), fixtureDefs.peek());

        bodyDefs.add(new BodyDef());
        fixtureDefs.add(new FixtureDef());
        bodyDefs.peek().type = BodyDef.BodyType.DynamicBody;
        bodyDefs.peek().position.set(0, 0);
        bodyDefs.peek().linearDamping = 0;
        bodyDefs.peek().angularDamping = 0;
        bodyDefs.peek().fixedRotation = true;
        bodyDefs.peek().gravityScale = 0;
        fixtureDefs.peek().shape = game.shapes.particleShape;
        fixtureDefs.peek().filter.categoryBits = Constants.CATEGORY_PLAYER_IGNORING_PARTICLE;
        fixtureDefs.peek().filter.maskBits = Constants.MASK_PLAYER_IGNORING_PARTICLE;
        fixtureDefs.peek().density = 1;
        fixtureDefs.peek().friction = 0;
        fixtureDefs.peek().restitution = 0;
        fixtureDefs.peek().isSensor = false;
        pdFlamethrowerParticle = new PhysicalDef(bodyDefs.peek(), fixtureDefs.peek());

        bodyDefs.add(new BodyDef());
        fixtureDefs.add(new FixtureDef());
        bodyDefs.peek().type = BodyDef.BodyType.DynamicBody;
        bodyDefs.peek().position.set(0, 0);
        bodyDefs.peek().linearDamping = 30;
        bodyDefs.peek().angularDamping = 0;
        bodyDefs.peek().fixedRotation = true;
        bodyDefs.peek().gravityScale = 0;
        fixtureDefs.peek().shape = game.shapes.particleShape;
        fixtureDefs.peek().filter.categoryBits = Constants.CATEGORY_GENERAL_PARTICLE;
        fixtureDefs.peek().filter.maskBits = Constants.MASK_GENERAL_PARTICLE;
        fixtureDefs.peek().density = 150;
        fixtureDefs.peek().friction = 0;
        fixtureDefs.peek().restitution = 0;
        fixtureDefs.peek().isSensor = false;
        pdExplosionParticle = new PhysicalDef(bodyDefs.peek(), fixtureDefs.peek());

        bodyDefs.add(new BodyDef());
        fixtureDefs.add(new FixtureDef());
        bodyDefs.peek().type = BodyDef.BodyType.DynamicBody;
        bodyDefs.peek().position.set(0, 0);
        bodyDefs.peek().linearDamping = 30;
        bodyDefs.peek().angularDamping = 0;
        bodyDefs.peek().fixedRotation = true;
        bodyDefs.peek().gravityScale = 0;
        fixtureDefs.peek().shape = game.shapes.particleShape;
        fixtureDefs.peek().filter.categoryBits = Constants.CATEGORY_PLAYER_IGNORING_PARTICLE;
        fixtureDefs.peek().filter.maskBits = Constants.MASK_PLAYER_IGNORING_PARTICLE;
        fixtureDefs.peek().density = 150;
        fixtureDefs.peek().friction = 0;
        fixtureDefs.peek().restitution = 0;
        fixtureDefs.peek().isSensor = false;
        pdFighterExplosionParticle = new PhysicalDef(bodyDefs.peek(), fixtureDefs.peek());

        bodyDefs.add(new BodyDef());
        fixtureDefs.add(new FixtureDef());
        bodyDefs.peek().type = BodyDef.BodyType.DynamicBody;
        bodyDefs.peek().position.set(0, 0);
        bodyDefs.peek().linearDamping = 0;
        bodyDefs.peek().angularDamping = 0;
        bodyDefs.peek().fixedRotation = true;
        bodyDefs.peek().gravityScale = 0;
        fixtureDefs.peek().shape = game.shapes.particleShape;
        fixtureDefs.peek().filter.categoryBits = Constants.CATEGORY_PLAYER_IGNORING_PARTICLE;
        fixtureDefs.peek().filter.maskBits = Constants.MASK_PLAYER_IGNORING_PARTICLE;
        fixtureDefs.peek().density = 1;
        fixtureDefs.peek().friction = 0;
        fixtureDefs.peek().restitution = 0;
        fixtureDefs.peek().isSensor = false;
        pdFighterFlameParticle = new PhysicalDef(bodyDefs.peek(), fixtureDefs.peek());

        bodyDefs.add(new BodyDef());
        fixtureDefs.add(new FixtureDef());
        bodyDefs.peek().type = BodyDef.BodyType.DynamicBody;
        bodyDefs.peek().position.set(0, 0);
        bodyDefs.peek().linearDamping = 1;
        bodyDefs.peek().angularDamping = 1;
        bodyDefs.peek().fixedRotation = false;
        bodyDefs.peek().gravityScale = 0;
        fixtureDefs.peek().shape = game.shapes.enemyCircleShape;
        fixtureDefs.peek().filter.categoryBits = Constants.CATEGORY_ENEMY;
        fixtureDefs.peek().filter.maskBits = Constants.MASK_ENEMY;
        fixtureDefs.peek().density = 1;
        fixtureDefs.peek().friction = 0;
        fixtureDefs.peek().restitution = 0;
        fixtureDefs.peek().isSensor = false;
        pdEnemyCircle = new PhysicalDef(bodyDefs.peek(), fixtureDefs.peek());

        bodyDefs.add(new BodyDef());
        fixtureDefs.add(new FixtureDef());
        bodyDefs.peek().type = BodyDef.BodyType.DynamicBody;
        bodyDefs.peek().position.set(0, 0);
        bodyDefs.peek().linearDamping = 1;
        bodyDefs.peek().angularDamping = 1;
        bodyDefs.peek().fixedRotation = false;
        bodyDefs.peek().gravityScale = 0;
        fixtureDefs.peek().shape = game.shapes.enemyEllipseShape;
        fixtureDefs.peek().filter.categoryBits = Constants.CATEGORY_ENEMY;
        fixtureDefs.peek().filter.maskBits = Constants.MASK_ENEMY;
        fixtureDefs.peek().density = 1;
        fixtureDefs.peek().friction = 0;
        fixtureDefs.peek().restitution = 0;
        fixtureDefs.peek().isSensor = false;
        pdEnemyEllipse = new PhysicalDef(bodyDefs.peek(), fixtureDefs.peek());

        bodyDefs.add(new BodyDef());
        fixtureDefs.add(new FixtureDef());
        bodyDefs.peek().type = BodyDef.BodyType.DynamicBody;
        bodyDefs.peek().position.set(0, 0);
        bodyDefs.peek().linearDamping = 1;
        bodyDefs.peek().angularDamping = 1;
        bodyDefs.peek().fixedRotation = false;
        bodyDefs.peek().gravityScale = 0;
        fixtureDefs.peek().shape = game.shapes.enemyPentagonShape;
        fixtureDefs.peek().filter.categoryBits = Constants.CATEGORY_ENEMY;
        fixtureDefs.peek().filter.maskBits = Constants.MASK_ENEMY;
        fixtureDefs.peek().density = 1;
        fixtureDefs.peek().friction = 0;
        fixtureDefs.peek().restitution = 0;
        fixtureDefs.peek().isSensor = false;
        pdEnemyPentagon = new PhysicalDef(bodyDefs.peek(), fixtureDefs.peek());

        bodyDefs.add(new BodyDef());
        fixtureDefs.add(new FixtureDef());
        bodyDefs.peek().type = BodyDef.BodyType.DynamicBody;
        bodyDefs.peek().position.set(0, 0);
        bodyDefs.peek().linearDamping = 1;
        bodyDefs.peek().angularDamping = 1;
        bodyDefs.peek().fixedRotation = false;
        bodyDefs.peek().gravityScale = 0;
        fixtureDefs.peek().shape = game.shapes.enemyRectangleShape;
        fixtureDefs.peek().filter.categoryBits = Constants.CATEGORY_ENEMY;
        fixtureDefs.peek().filter.maskBits = Constants.MASK_ENEMY;
        fixtureDefs.peek().density = 1;
        fixtureDefs.peek().friction = 0;
        fixtureDefs.peek().restitution = 0;
        fixtureDefs.peek().isSensor = false;
        pdEnemyRectangle = new PhysicalDef(bodyDefs.peek(), fixtureDefs.peek());

        bodyDefs.add(new BodyDef());
        fixtureDefs.add(new FixtureDef());
        bodyDefs.peek().type = BodyDef.BodyType.DynamicBody;
        bodyDefs.peek().position.set(0, 0);
        bodyDefs.peek().linearDamping = 1;
        bodyDefs.peek().angularDamping = 1;
        bodyDefs.peek().fixedRotation = false;
        bodyDefs.peek().gravityScale = 0;
        fixtureDefs.peek().shape = game.shapes.enemySemicircleShape;
        fixtureDefs.peek().filter.categoryBits = Constants.CATEGORY_ENEMY;
        fixtureDefs.peek().filter.maskBits = Constants.MASK_ENEMY;
        fixtureDefs.peek().density = 1;
        fixtureDefs.peek().friction = 0;
        fixtureDefs.peek().restitution = 0;
        fixtureDefs.peek().isSensor = false;
        pdEnemySemicircle = new PhysicalDef(bodyDefs.peek(), fixtureDefs.peek());

        bodyDefs.add(new BodyDef());
        fixtureDefs.add(new FixtureDef());
        bodyDefs.peek().type = BodyDef.BodyType.DynamicBody;
        bodyDefs.peek().position.set(0, 0);
        bodyDefs.peek().linearDamping = 1;
        bodyDefs.peek().angularDamping = 1;
        bodyDefs.peek().fixedRotation = false;
        bodyDefs.peek().gravityScale = 0;
        fixtureDefs.peek().shape = game.shapes.enemySquareShape;
        fixtureDefs.peek().filter.categoryBits = Constants.CATEGORY_ENEMY;
        fixtureDefs.peek().filter.maskBits = Constants.MASK_ENEMY;
        fixtureDefs.peek().density = 1;
        fixtureDefs.peek().friction = 0;
        fixtureDefs.peek().restitution = 0;
        fixtureDefs.peek().isSensor = false;
        pdEnemySquare = new PhysicalDef(bodyDefs.peek(), fixtureDefs.peek());

        bodyDefs.add(new BodyDef());
        fixtureDefs.add(new FixtureDef());
        bodyDefs.peek().type = BodyDef.BodyType.DynamicBody;
        bodyDefs.peek().position.set(0, 0);
        bodyDefs.peek().linearDamping = 1;
        bodyDefs.peek().angularDamping = 0;
        bodyDefs.peek().fixedRotation = false;
        bodyDefs.peek().gravityScale = 0;
        fixtureDefs.peek().shape = game.shapes.enemyStarShape;
        fixtureDefs.peek().filter.categoryBits = Constants.CATEGORY_ENEMY;
        fixtureDefs.peek().filter.maskBits = Constants.MASK_ENEMY;
        fixtureDefs.peek().density = 1;
        fixtureDefs.peek().friction = 0;
        fixtureDefs.peek().restitution = 0;
        fixtureDefs.peek().isSensor = false;
        pdEnemyStar = new PhysicalDef(bodyDefs.peek(), fixtureDefs.peek());

        bodyDefs.add(new BodyDef());
        fixtureDefs.add(new FixtureDef());
        bodyDefs.peek().type = BodyDef.BodyType.DynamicBody;
        bodyDefs.peek().position.set(0, 0);
        bodyDefs.peek().linearDamping = 1;
        bodyDefs.peek().angularDamping = 1;
        bodyDefs.peek().fixedRotation = false;
        bodyDefs.peek().gravityScale = 0;
        fixtureDefs.peek().shape = game.shapes.enemyTriangleShape;
        fixtureDefs.peek().filter.categoryBits = Constants.CATEGORY_ENEMY;
        fixtureDefs.peek().filter.maskBits = Constants.MASK_ENEMY;
        fixtureDefs.peek().density = 1;
        fixtureDefs.peek().friction = 0;
        fixtureDefs.peek().restitution = 0;
        fixtureDefs.peek().isSensor = false;
        pdEnemyTriangle = new PhysicalDef(bodyDefs.peek(), fixtureDefs.peek());

        bodyDefs.add(new BodyDef());
        fixtureDefs.add(new FixtureDef());
        bodyDefs.peek().type = BodyDef.BodyType.DynamicBody;
        bodyDefs.peek().position.set(0, 0);
        bodyDefs.peek().linearDamping = 5;
        bodyDefs.peek().angularDamping = 0;
        bodyDefs.peek().fixedRotation = true;
        bodyDefs.peek().gravityScale = 0;
        fixtureDefs.peek().shape = game.shapes.enemyCircleAmmunitionShape;
        fixtureDefs.peek().filter.categoryBits = Constants.CATEGORY_ENEMY_AMMUNITION;
        fixtureDefs.peek().filter.maskBits = Constants.MASK_ENEMY_AMMUNITION;
        fixtureDefs.peek().density = 0.1f;
        fixtureDefs.peek().friction = 0;
        fixtureDefs.peek().restitution = 0;
        fixtureDefs.peek().isSensor = false;
        pdEnemyCircleAmmunition = new PhysicalDef(bodyDefs.peek(), fixtureDefs.peek());

        bodyDefs.add(new BodyDef());
        fixtureDefs.add(new FixtureDef());
        bodyDefs.peek().type = BodyDef.BodyType.DynamicBody;
        bodyDefs.peek().position.set(0, 0);
        bodyDefs.peek().linearDamping = 5;
        bodyDefs.peek().angularDamping = 0;
        bodyDefs.peek().fixedRotation = true;
        bodyDefs.peek().gravityScale = 0;
        fixtureDefs.peek().shape = game.shapes.enemyPentagonAmmunitionShape;
        fixtureDefs.peek().filter.categoryBits = Constants.CATEGORY_ENEMY_AMMUNITION;
        fixtureDefs.peek().filter.maskBits = Constants.MASK_ENEMY_AMMUNITION;
        fixtureDefs.peek().density = 0.1f;
        fixtureDefs.peek().friction = 0;
        fixtureDefs.peek().restitution = 0;
        fixtureDefs.peek().isSensor = false;
        pdEnemyPentagonAmmunition = new PhysicalDef(bodyDefs.peek(), fixtureDefs.peek());

        bodyDefs.add(new BodyDef());
        fixtureDefs.add(new FixtureDef());
        bodyDefs.peek().type = BodyDef.BodyType.DynamicBody;
        bodyDefs.peek().position.set(0, 0);
        bodyDefs.peek().linearDamping = 0;
        bodyDefs.peek().angularDamping = 0;
        bodyDefs.peek().fixedRotation = true;
        bodyDefs.peek().gravityScale = 0;
        fixtureDefs.peek().shape = game.shapes.enemyRectangleAmmunitionShape;
        fixtureDefs.peek().filter.categoryBits = Constants.CATEGORY_ENEMY_AMMUNITION;
        fixtureDefs.peek().filter.maskBits = Constants.MASK_ENEMY_AMMUNITION;
        fixtureDefs.peek().density = 0.1f;
        fixtureDefs.peek().friction = 0;
        fixtureDefs.peek().restitution = 0;
        fixtureDefs.peek().isSensor = false;
        pdEnemyRectangleAmmunition = new PhysicalDef(bodyDefs.peek(), fixtureDefs.peek());

        bodyDefs.add(new BodyDef());
        fixtureDefs.add(new FixtureDef());
        bodyDefs.peek().type = BodyDef.BodyType.DynamicBody;
        bodyDefs.peek().position.set(0, 0);
        bodyDefs.peek().linearDamping = 0;
        bodyDefs.peek().angularDamping = 0;
        bodyDefs.peek().fixedRotation = true;
        bodyDefs.peek().gravityScale = 0;
        fixtureDefs.peek().shape = game.shapes.enemySemicircleAmmunitionShape;
        fixtureDefs.peek().filter.categoryBits = Constants.CATEGORY_ENEMY_AMMUNITION;
        fixtureDefs.peek().filter.maskBits = Constants.MASK_ENEMY_AMMUNITION;
        fixtureDefs.peek().density = 0.1f;
        fixtureDefs.peek().friction = 0;
        fixtureDefs.peek().restitution = 0;
        fixtureDefs.peek().isSensor = false;
        pdEnemySemicircleAmmunition = new PhysicalDef(bodyDefs.peek(), fixtureDefs.peek());

        bodyDefs.add(new BodyDef());
        fixtureDefs.add(new FixtureDef());
        bodyDefs.peek().type = BodyDef.BodyType.DynamicBody;
        bodyDefs.peek().position.set(0, 0);
        bodyDefs.peek().linearDamping = 0;
        bodyDefs.peek().angularDamping = 0;
        bodyDefs.peek().fixedRotation = true;
        bodyDefs.peek().gravityScale = 0;
        fixtureDefs.peek().shape = game.shapes.enemyStarAmmunitionShape;
        fixtureDefs.peek().filter.categoryBits = Constants.CATEGORY_ENEMY_AMMUNITION;
        fixtureDefs.peek().filter.maskBits = Constants.MASK_ENEMY_AMMUNITION;
        fixtureDefs.peek().density = 0.1f;
        fixtureDefs.peek().friction = 0;
        fixtureDefs.peek().restitution = 0;
        fixtureDefs.peek().isSensor = false;
        pdEnemyStarAmmunition = new PhysicalDef(bodyDefs.peek(), fixtureDefs.peek());

        bodyDefs.add(new BodyDef());
        fixtureDefs.add(new FixtureDef());
        bodyDefs.peek().type = BodyDef.BodyType.DynamicBody;
        bodyDefs.peek().position.set(0, 0);
        bodyDefs.peek().linearDamping = 0;
        bodyDefs.peek().angularDamping = 0;
        bodyDefs.peek().fixedRotation = true;
        bodyDefs.peek().gravityScale = 0;
        fixtureDefs.peek().shape = game.shapes.enemyTriangleAmmunitionShape;
        fixtureDefs.peek().filter.categoryBits = Constants.CATEGORY_ENEMY_AMMUNITION;
        fixtureDefs.peek().filter.maskBits = Constants.MASK_ENEMY_AMMUNITION;
        fixtureDefs.peek().density = 0.1f;
        fixtureDefs.peek().friction = 0;
        fixtureDefs.peek().restitution = 0;
        fixtureDefs.peek().isSensor = false;
        pdEnemyTriangleAmmunition = new PhysicalDef(bodyDefs.peek(), fixtureDefs.peek());
    }
}